document.addEventListener('DOMContentLoaded', function() {
    // –¢–µ–∫—É—â–∏–π –≥–æ–¥ –≤ —Ñ—É—Ç–µ—Ä–µ
    document.getElementById('current-year').textContent = new Date().getFullYear();

    // –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');

    if (mobileMenuButton && mobileMenu) {
        mobileMenuButton.addEventListener('click', function() {
            mobileMenu.classList.toggle('hidden');
        });

        // –ó–∞–∫—Ä—ã–≤–∞—Ç—å –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –ª—é–±—É—é —Å—Å—ã–ª–∫—É
        const mobileLinks = mobileMenu.querySelectorAll('a');
        mobileLinks.forEach(link => {
            link.addEventListener('click', function() {
                mobileMenu.classList.add('hidden');
            });
        });

        // –ó–∞–∫—Ä—ã–≤–∞—Ç—å –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –º–µ–Ω—é
        document.addEventListener('click', function(event) {
            if (!mobileMenu.contains(event.target) && !mobileMenuButton.contains(event.target) && !mobileMenu.classList.contains('hidden')) {
                mobileMenu.classList.add('hidden');
            }
        });
    }

    // –ö–Ω–æ–ø–∫–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ (—Ä–∞–¥–∏–æ–∫–Ω–æ–ø–∫–∏)
    const filterBtns = document.querySelectorAll('.filter-btn');
    
    if (filterBtns.length > 0) {
        filterBtns.forEach(btn => {
            btn.addEventListener('click', function() {
                // –°–Ω–∏–º–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —Å—Ç–∞—Ç—É—Å —Å–æ –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
                filterBtns.forEach(b => {
                    b.classList.remove('bg-gold-1');
                    b.classList.remove('text-black');
                    b.classList.add('border');
                    b.classList.add('border-dark-gray');
                    b.classList.add('text-dark-gray');
                });
                
                // –î–µ–ª–∞–µ–º —Ç–µ–∫—É—â—É—é –∫–Ω–æ–ø–∫—É –∞–∫—Ç–∏–≤–Ω–æ–π
                this.classList.add('bg-gold-1');
                this.classList.add('text-black');
                this.classList.remove('border');
                this.classList.remove('border-dark-gray');
                this.classList.remove('text-dark-gray');
                
                // –¢—É—Ç –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–¥ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤
                const filter = this.getAttribute('data-filter');
                // filterProjects(filter);
            });
        });
    }

    // –°–ª–∞–π–¥–µ—Ä –ø—Ä–æ–µ–∫—Ç–æ–≤
    const slides = document.querySelectorAll('.slide');
    const indicators = document.querySelectorAll('.indicator');
    const sliderPrev = document.getElementById('slider-prev');
    const sliderNext = document.getElementById('slider-next');
    let currentSlide = 0;
    let slideInterval;

    function showSlide(n) {
        // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —Å–ª–∞–π–¥—ã
        slides.forEach(slide => {
            slide.classList.remove('active');
            slide.style.opacity = '0';
        });

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å–ª–∞–π–¥
        slides[n].classList.add('active');
        slides[n].style.opacity = '1';
        
        currentSlide = n;
    }

    function nextSlide() {
        showSlide((currentSlide + 1) % slides.length);
    }

    function prevSlide() {
        showSlide((currentSlide - 1 + slides.length) % slides.length);
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Å—Ç—Ä–µ–ª–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    if (sliderPrev && sliderNext) {
        sliderPrev.addEventListener('click', function() {
            clearInterval(slideInterval);
            prevSlide();
            startSlideInterval();
        });

        sliderNext.addEventListener('click', function() {
            clearInterval(slideInterval);
            nextSlide();
            startSlideInterval();
        });
    }

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å–ª–∞–π–¥–æ–≤
    function startSlideInterval() {
        slideInterval = setInterval(nextSlide, 10000);
    }

    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–ª–∞–π–¥–µ—Ä
    if (slides.length > 0) {
        startSlideInterval();
    }

        // –ö–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —ç—Ç–∞–ø–æ–≤ —Ä–∞–±–æ—Ç—ã –±—ã–ª –ø–µ—Ä–µ–º–µ—â–µ–Ω –≤ index.html
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ò–ò –¥–∏–∑–∞–π–Ω–∞
    initAIDesign();
});

// ------------ –ò–ò –î–ò–ó–ê–ô–ù –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–¨ ------------

function initAIDesign() {
    console.log('üé® === –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ò–ò –î–ò–ó–ê–ô–ù–ê ===');
    console.log('–í—Ä–µ–º—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', new Date().toISOString());
    console.log('URL —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', window.location.href);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏–º—Å—è –ª–∏ –º—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ AI –¥–∏–∑–∞–π–Ω–∞
    const photoUpload = document.getElementById('photo-upload');
    console.log('–≠–ª–µ–º–µ–Ω—Ç photo-upload –Ω–∞–π–¥–µ–Ω:', !!photoUpload);
    
    if (!photoUpload) {
        console.log('‚ùå –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ò–ò –¥–∏–∑–∞–π–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –≤—ã—Ö–æ–¥–∏–º');
        return;
    }
    
    console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ò–ò –¥–∏–∑–∞–π–Ω–∞ –Ω–∞–π–¥–µ–Ω–∞');
    const uploadArea = photoUpload.parentElement;
    const uploadButton = uploadArea.querySelector('button');
    const submitButton = document.querySelector('form button[type="button"]');
    
    // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–æ–≤
    photoUpload.disabled = false;
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
    if (uploadButton) {
        uploadButton.onclick = () => photoUpload.click();
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤
    uploadArea.ondragover = (e) => {
        e.preventDefault();
        uploadArea.classList.add('border-gold-1', 'bg-gold-1', 'bg-opacity-10');
    };
    
    uploadArea.ondragleave = () => {
        uploadArea.classList.remove('border-gold-1', 'bg-gold-1', 'bg-opacity-10');
    };
    
    uploadArea.ondrop = (e) => {
        e.preventDefault();
        uploadArea.classList.remove('border-gold-1', 'bg-gold-1', 'bg-opacity-10');
        
        const files = e.dataTransfer.files;
        if (files.length > 0 && files[0].type.startsWith('image/')) {
            photoUpload.files = files;
            updateUploadDisplay(files[0]);
        }
    };
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
    photoUpload.onchange = (e) => {
        if (e.target.files[0]) {
            updateUploadDisplay(e.target.files[0]);
        }
    };
    
    // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫ –∫–Ω–æ–ø–∫–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
    if (submitButton) {
        submitButton.onclick = handleAIDesign;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ò–ò –¥–∏–∑–∞–π–Ω–∞ —á–µ—Ä–µ–∑ Hugging Face
async function handleAIDesign() {
    console.log('\nüöÄ === –ù–ê–ß–ê–õ–û –û–ë–†–ê–ë–û–¢–ö–ò –ò–ò –î–ò–ó–ê–ô–ù–ê ===');
    console.log('–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞:', new Date().toISOString());
    
    const photoUpload = document.getElementById('photo-upload');
    const styleSelect = document.getElementById('style-select');
    const promptInput = document.getElementById('prompt-input');
    const submitButton = document.querySelector('form button[type="button"]');
    
    console.log('üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã:');
    console.log('  photoUpload:', !!photoUpload);
    console.log('  styleSelect:', !!styleSelect);
    console.log('  promptInput:', !!promptInput);
    console.log('  submitButton:', !!submitButton);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å –ø–æ–ª–µ–π
    console.log('üîç –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö:');
    const file = photoUpload.files[0];
    const style = styleSelect.value;
    const prompt = promptInput.value.trim();
    
    console.log('  –§–∞–π–ª:', file ? `${file.name} (${Math.round(file.size/1024)}KB, ${file.type})` : '–ù–ï–¢');
    console.log('  –°—Ç–∏–ª—å:', style || '–ù–ï –í–´–ë–†–ê–ù');
    console.log('  –ü—Ä–æ–º—Ç:', prompt || '–ü–£–°–¢–û–ô');
    
    if (!file) {
        console.log('‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ–≤–∞–ª–µ–Ω–∞: –Ω–µ—Ç —Ñ–∞–π–ª–∞');
        showErrorMessage('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ');
        return;
    }
    
    if (!style) {
        console.log('‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ–≤–∞–ª–µ–Ω–∞: –Ω–µ—Ç —Å—Ç–∏–ª—è');
        showErrorMessage('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∏–ª—å');
        return;
    }
    
    if (!prompt) {
        console.log('‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ–≤–∞–ª–µ–Ω–∞: –Ω–µ—Ç –ø—Ä–æ–º—Ç–∞');
        showErrorMessage('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –∂–µ–ª–∞–µ–º—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è');
        return;
    }
    
    console.log('‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ');

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
    const originalButtonText = submitButton.textContent;
    submitButton.disabled = true;
    
    // –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    showLoadingProgress();

    try {
        // –°–æ–∑–¥–∞–µ–º FormData –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞
        console.log('üì¶ –°–æ–∑–¥–∞–µ–º FormData...');
        const formData = new FormData();
        formData.append('image', file);
        formData.append('style', style);
        formData.append('prompt', prompt);
        
        console.log('FormData –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–∞:');
        console.log('  image:', file.name);
        console.log('  style:', style);
        console.log('  prompt:', prompt.substring(0, 50) + (prompt.length > 50 ? '...' : ''));

        updateLoadingProgress('–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...', 25);

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        console.log('üåê –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST –∑–∞–ø—Ä–æ—Å –∫ /api/ai-design-genapi');
        console.log('URL:', window.location.origin + '/api/ai-design-genapi');
        
        const response = await fetch('/api/ai-design-genapi', {
            method: 'POST',
            body: formData
        });

        console.log('üì° –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:');
        console.log('  –°—Ç–∞—Ç—É—Å:', response.status, response.statusText);
        console.log('  Content-Type:', response.headers.get('content-type'));
        console.log('  OK:', response.ok);

        updateLoadingProgress('–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –¥–∏–∑–∞–π–Ω...', 75);

        if (!response.ok) {
            const errorText = await response.text();
            console.error('‚ùå HTTP –æ—à–∏–±–∫–∞:', response.status, errorText);
            throw new Error(`HTTP ${response.status}: ${errorText}`);
        }

        console.log('üìÑ –ü–∞—Ä—Å–∏–º JSON –æ—Ç–≤–µ—Ç...');
        const result = await response.json();
        console.log('‚úÖ JSON –æ—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω:', result);

        if (result.success) {
            updateLoadingProgress('–ì–æ—Ç–æ–≤–æ!', 100);
            setTimeout(() => {
                hideLoadingProgress();
                displayHuggingFaceResult(result);
            }, 1000);
        } else {
            hideLoadingProgress();
            showErrorMessage(result.error, result.details);
        }

    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ:', error);
        hideLoadingProgress();
        showErrorMessage('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è', error.message);
    } finally {
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–Ω–æ–ø–∫—É –≤ –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        submitButton.disabled = false;
        submitButton.textContent = originalButtonText;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
function updateUploadDisplay(file) {
    const uploadArea = document.getElementById('photo-upload').parentElement;
    const fileName = file.name;
    const fileSize = (file.size / 1024 / 1024).toFixed(2) + ' MB';
    
    uploadArea.innerHTML = `
        <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-green-500 mb-2 mx-auto" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
        </svg>
        <p class="text-center mb-2"><strong>–§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω:</strong></p>
        <p class="text-center text-sm text-gray mb-3">${fileName} (${fileSize})</p>
        <button type="button" class="btn bg-gold-1 text-black hover:bg-gold-2 transition-colors">
            –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π —Ñ–∞–π–ª
        </button>
        <input id="photo-upload" type="file" accept="image/*" class="hidden" />
    `;
    
    // –ü–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    const newUploadInput = document.getElementById('photo-upload');
    const newUploadButton = uploadArea.querySelector('button');
    newUploadButton.onclick = () => newUploadInput.click();
    newUploadInput.onchange = (e) => {
        if (e.target.files[0]) {
            updateUploadDisplay(e.target.files[0]);
        }
    };
}

// –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
function showLoadingProgress() {
    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –µ—Å–ª–∏ –µ—Å—Ç—å
    const oldProgress = document.getElementById('loading-progress');
    if (oldProgress) oldProgress.remove();

    const progressHTML = `
        <div id="loading-progress" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
            <div class="bg-white p-8 rounded-lg max-w-md w-full mx-4">
                <div class="text-center">
                    <div class="mb-4">
                        <svg class="animate-spin h-12 w-12 text-gold-1 mx-auto" fill="none" viewBox="0 0 24 24">
                            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                        </svg>
                    </div>
                    <h3 id="progress-title" class="text-lg font-montserrat font-semibold mb-2">–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞...</h3>
                    <div class="w-full bg-gray-200 rounded-full h-2 mb-4">
                        <div id="progress-bar" class="bg-gold-1 h-2 rounded-full transition-all duration-300" style="width: 0%"></div>
                    </div>
                    <p class="text-gray text-sm">–û–±—Ä–∞–±–æ—Ç–∫–∞ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å 30-90 —Å–µ–∫—É–Ω–¥</p>
                    <p class="text-gray text-xs mt-2">Hugging Face –º–æ–¥–µ–ª–∏ –∏–Ω–æ–≥–¥–∞ "–∑–∞—Å—ã–ø–∞—é—Ç" –∏ —Ç—Ä–µ–±—É—é—Ç –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏</p>
                </div>
            </div>
        </div>
    `;
    
    document.body.insertAdjacentHTML('beforeend', progressHTML);
}

// –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å
function updateLoadingProgress(message, percent) {
    const title = document.getElementById('progress-title');
    const bar = document.getElementById('progress-bar');
    
    if (title) title.textContent = message;
    if (bar) bar.style.width = percent + '%';
}

// –°–∫—Ä—ã—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
function hideLoadingProgress() {
    const progress = document.getElementById('loading-progress');
    if (progress) progress.remove();
}

// –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
function showErrorMessage(error, details) {
    const errorHTML = `
        <div id="error-message" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
            <div class="bg-white p-8 rounded-lg max-w-md w-full mx-4">
                <div class="text-center">
                    <div class="mb-4">
                        <svg class="h-12 w-12 text-red-500 mx-auto" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.732-.833-2.5 0L4.268 6.5c-.77.833-.192 2.5 1.732 2.5z" />
                        </svg>
                    </div>
                    <h3 class="text-lg font-montserrat font-semibold mb-2 text-red-600">–û—à–∏–±–∫–∞</h3>
                    <p class="text-gray mb-4">${error}</p>
                    ${details ? `<p class="text-xs text-gray-500 mb-4">–î–µ—Ç–∞–ª–∏: ${details}</p>` : ''}
                    <button onclick="document.getElementById('error-message').remove()" 
                            class="btn bg-red-500 text-white hover:bg-red-600 transition-colors">
                        –ó–∞–∫—Ä—ã—Ç—å
                    </button>
                </div>
            </div>
        </div>
    `;
    
    document.body.insertAdjacentHTML('beforeend', errorHTML);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ Hugging Face
function displayHuggingFaceResult(result) {
    // –°–æ–∑–¥–∞–µ–º —Å–µ–∫—Ü–∏—é –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    let resultSection = document.getElementById('ai-result-section');
    if (!resultSection) {
        resultSection = document.createElement('section');
        resultSection.id = 'ai-result-section';
        resultSection.className = 'mt-12 border border-gray p-8 rounded-lg';
        
        // –í—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ —Ñ–æ—Ä–º—ã
        const form = document.querySelector('form');
        form.parentNode.insertBefore(resultSection, form.nextSibling);
    }

    resultSection.innerHTML = `
        <h3 class="text-2xl font-montserrat font-semibold mb-6 text-center">
            –†–µ–∑—É–ª—å—Ç–∞—Ç –ò–ò-–¥–∏–∑–∞–π–Ω–∞
        </h3>
        
        ${result.analysis && result.analysis !== 'interior room' ? `
        <div class="mb-6 p-4 bg-light-gray rounded-lg">
            <h4 class="font-montserrat font-medium mb-2">–ê–Ω–∞–ª–∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:</h4>
            <p class="text-sm text-gray">"${result.analysis}"</p>
        </div>
        ` : ''}
        
        <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
            <div>
                <h4 class="text-lg font-montserrat font-medium mb-3 text-center">–ò—Å—Ö–æ–¥–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ</h4>
                <div class="bg-dark-gray rounded-lg overflow-hidden">
                    <img src="${result.originalImage}" alt="–ò—Å—Ö–æ–¥–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ" class="w-full h-auto">
                </div>
            </div>
            <div>
                <h4 class="text-lg font-montserrat font-medium mb-3 text-center">–ù–æ–≤—ã–π –¥–∏–∑–∞–π–Ω (${result.style})</h4>
                <div class="bg-dark-gray rounded-lg overflow-hidden">
                    <img src="${result.editedImage}" alt="–û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ" class="w-full h-auto" 
                         onerror="this.parentElement.innerHTML='<div class=\\'p-8 text-center text-white\\'>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</div>'">
                </div>
            </div>
        </div>
        
        <div class="mt-6">
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                <div class="p-4 bg-light-gray rounded-lg">
                    <h5 class="font-montserrat font-medium mb-2">–í—ã–±—Ä–∞–Ω–Ω—ã–π —Å—Ç–∏–ª—å:</h5>
                    <p class="text-sm"><strong>${result.style}</strong></p>
                </div>
                <div class="p-4 bg-light-gray rounded-lg">
                    <h5 class="font-montserrat font-medium mb-2">–í–∞—à–µ –æ–ø–∏—Å–∞–Ω–∏–µ:</h5>
                    <p class="text-sm">"${result.prompt}"</p>
                </div>
            </div>
            
            <p class="text-xs text-gray-500 text-center mb-4">–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${new Date(result.timestamp).toLocaleString()}</p>
            
            <div class="flex flex-col sm:flex-row gap-4 justify-center">
                <a href="${result.editedImage}" download="ai-design-result.png" 
                   class="btn bg-gold-1 text-black hover:bg-gold-2 transition-colors text-center">
                    üì• –°–∫–∞—á–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                </a>
                <button onclick="document.getElementById('ai-result-section').remove()" 
                        class="btn bg-gray text-white hover:bg-dark-gray transition-colors">
                    ‚úï –°–∫—Ä—ã—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                </button>
                <button onclick="location.reload()" 
                        class="btn bg-blue-500 text-white hover:bg-blue-600 transition-colors">
                    üîÑ –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –¥–∏–∑–∞–π–Ω
                </button>
            </div>
        </div>
        
        <div class="mt-6 p-4 bg-blue-50 rounded-lg">
            <p class="text-xs text-blue-600">
                <strong>üí° –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:</strong> –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —Å –ø–æ–º–æ—â—å—é –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π Hugging Face. 
                –ö–∞—á–µ—Å—Ç–≤–æ –º–æ–∂–µ—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è –æ—Ç –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤. –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –º–æ–¥–µ–ª–∏ –º–æ–≥—É—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å 30-60 —Å–µ–∫—É–Ω–¥ –¥–ª—è "—Ä–∞–∑–æ–≥—Ä–µ–≤–∞".
            </p>
        </div>
    `;

    // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
    resultSection.scrollIntoView({ behavior: 'smooth' });
} 