const axios = require('axios');

async function testPortfolioImages() {
    console.log('üîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô –ü–û–†–¢–§–û–õ–ò–û');
    console.log('='.repeat(50));
    
    try {
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ
        console.log('\nüì° –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ...');
        const response = await axios.get('http://localhost:3001/api/portfolio');
        
        if (!response.data.success) {
            console.log('‚ùå API –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
            return;
        }
        
        const portfolioData = response.data.data;
        console.log('‚úÖ API –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ —Ä–∞–±–æ—Ç–∞–µ—Ç');
        console.log(`üìä –í—Å–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–æ–≤: ${portfolioData.all?.length || 0}`);
        console.log(`üè† –ö–≤–∞—Ä—Ç–∏—Ä—ã: ${portfolioData.apartments?.length || 0}`);
        console.log(`üè° –î–æ–º–∞: ${portfolioData.houses?.length || 0}`);
        console.log(`üè¢ –û—Ñ–∏—Å—ã: ${portfolioData.offices?.length || 0}`);
        
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ —Ä–∞–∑–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        const testSamples = [
            { category: 'apartments', data: portfolioData.apartments?.slice(0, 3) || [] },
            { category: 'houses', data: portfolioData.houses?.slice(0, 3) || [] },
            { category: 'offices', data: portfolioData.offices?.slice(0, 3) || [] }
        ];
        
        console.log('\nüñºÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:');
        
        for (const sample of testSamples) {
            console.log(`\n--- ${sample.category.toUpperCase()} ---`);
            
            if (sample.data.length === 0) {
                console.log('‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
                continue;
            }
            
            for (let i = 0; i < sample.data.length; i++) {
                const project = sample.data[i];
                console.log(`\n${i + 1}. ${project.title} (ID: ${project.id})`);
                
                // –¢–µ—Å—Ç–∏—Ä—É–µ–º URL
                if (project.url) {
                    try {
                        const imageCheck = await axios.head(project.url, { 
                            timeout: 8000,
                            validateStatus: function (status) {
                                return status >= 200 && status < 500; // –ü—Ä–∏–Ω–∏–º–∞–µ–º –ª—é–±–æ–π —Å—Ç–∞—Ç—É—Å –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
                            }
                        });
                        
                        if (imageCheck.status >= 200 && imageCheck.status < 300) {
                            console.log(`   ‚úÖ URL —Ä–∞–±–æ—Ç–∞–µ—Ç (—Å—Ç–∞—Ç—É—Å: ${imageCheck.status})`);
                            console.log(`   üìè –†–∞–∑–º–µ—Ä: ${imageCheck.headers['content-length'] || 'unknown'} –±–∞–π—Ç`);
                        } else {
                            console.log(`   ‚ö†Ô∏è URL –≤–µ—Ä–Ω—É–ª —Å—Ç–∞—Ç—É—Å: ${imageCheck.status}`);
                        }
                        
                    } catch (error) {
                        console.log(`   ‚ùå URL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${error.message}`);
                        if (error.response?.status) {
                            console.log(`   üìä HTTP —Å—Ç–∞—Ç—É—Å: ${error.response.status}`);
                        }
                    }
                } else {
                    console.log('   ‚ö†Ô∏è URL –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
                }
                
                // –¢–µ—Å—Ç–∏—Ä—É–µ–º direct_url –µ—Å–ª–∏ –µ—Å—Ç—å
                if (project.direct_url && project.direct_url !== project.url) {
                    try {
                        const directCheck = await axios.head(project.direct_url, { 
                            timeout: 8000,
                            validateStatus: function (status) {
                                return status >= 200 && status < 500;
                            }
                        });
                        
                        if (directCheck.status >= 200 && directCheck.status < 300) {
                            console.log(`   ‚úÖ Direct URL —Ä–∞–±–æ—Ç–∞–µ—Ç (—Å—Ç–∞—Ç—É—Å: ${directCheck.status})`);
                        } else {
                            console.log(`   ‚ö†Ô∏è Direct URL –≤–µ—Ä–Ω—É–ª —Å—Ç–∞—Ç—É—Å: ${directCheck.status}`);
                        }
                        
                    } catch (error) {
                        console.log(`   ‚ùå Direct URL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${error.message}`);
                    }
                }
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ—Ä–æ—Ç–∫—É—é –≤–µ—Ä—Å–∏—é URL –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
                const shortUrl = project.url ? project.url.substring(0, 80) + '...' : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç';
                console.log(`   üîó URL: ${shortUrl}`);
            }
        }
        
        console.log('\nüìã –†–ï–ó–£–õ–¨–¢–ê–¢–´:');
        console.log('üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ:');
        console.log('   http://localhost:3001/portfolio.html');
        console.log('üîß –ï—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è, –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
        console.log('   1. –ò—Å—Ç–µ–∫—à–∏–µ —Ç–æ–∫–µ–Ω—ã –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–∞ (—Å—Ç–∞—Ç—É—Å 410)');
        console.log('   2. CORS –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –±—Ä–∞—É–∑–µ—Ä–∞');
        console.log('   3. –ú–µ–¥–ª–µ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π');
        console.log('   4. –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é');
        
    } catch (error) {
        console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
    }
}

testPortfolioImages(); 