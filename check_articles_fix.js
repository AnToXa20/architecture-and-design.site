const axios = require('axios');

async function checkArticlesFix() {
    console.log('üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú –° –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø–ú–ò –°–¢–ê–¢–ï–ô');
    console.log('='.repeat(60));
    
    try {
        // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
        console.log('\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API...');
        
        const articlesResponse = await axios.get('http://localhost:3001/api/db/articles');
        console.log('‚úÖ API —Å–ø–∏—Å–∫–∞ —Å—Ç–∞—Ç–µ–π –¥–æ—Å—Ç—É–ø–µ–Ω');
        console.log(`üìä –°—Ç–∞—Ç–µ–π –≤ –ë–î: ${articlesResponse.data.articles?.length || 0}`);
        
        if (!articlesResponse.data.articles || articlesResponse.data.articles.length === 0) {
            console.log('‚ö†Ô∏è –°—Ç–∞—Ç—å–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
            return;
        }
        
        // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é —Å—Ç–∞—Ç—å—é –¥–µ—Ç–∞–ª—å–Ω–æ
        console.log('\n2Ô∏è‚É£ –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–µ–π...');
        
        for (let i = 0; i < articlesResponse.data.articles.length; i++) {
            const article = articlesResponse.data.articles[i];
            console.log(`\nüìÑ –°—Ç–∞—Ç—å—è ${i + 1}: ${article.title}`);
            console.log(`   ID: ${article.id}`);
            console.log(`   –ì–ª–∞–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${article.main_image_url ? '–ï–°–¢–¨' : '–ù–ï–¢'}`);
            
            if (article.main_image_url) {
                console.log(`   URL: ${article.main_image_url.substring(0, 80)}...`);
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                try {
                    const imageCheck = await axios.head(article.main_image_url, { timeout: 5000 });
                    console.log(`   üü¢ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ (—Å—Ç–∞—Ç—É—Å: ${imageCheck.status})`);
                } catch (error) {
                    console.log(`   üî¥ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ: ${error.message}`);
                }
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–ª–æ–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
            try {
                const detailResponse = await axios.get(`http://localhost:3001/api/db/articles/${article.id}`);
                const contentBlocks = detailResponse.data.article?.contentBlocks || [];
                const imageBlocks = contentBlocks.filter(block => block.block_type === 'image');
                
                console.log(`   –ë–ª–æ–∫–æ–≤ –∫–æ–Ω—Ç–µ–Ω—Ç–∞: ${contentBlocks.length}`);
                console.log(`   –ë–ª–æ–∫–æ–≤ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏: ${imageBlocks.length}`);
                
                for (let j = 0; j < imageBlocks.length; j++) {
                    const block = imageBlocks[j];
                    console.log(`     –ë–ª–æ–∫ ${j + 1}: ${block.image_url ? '–ï–°–¢–¨ URL' : '–ù–ï–¢ URL'}`);
                    
                    if (block.image_url) {
                        try {
                            const blockImageCheck = await axios.head(block.image_url, { timeout: 5000 });
                            console.log(`     üü¢ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±–ª–æ–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ (—Å—Ç–∞—Ç—É—Å: ${blockImageCheck.status})`);
                        } catch (error) {
                            console.log(`     üî¥ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±–ª–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ: ${error.message}`);
                        }
                    }
                }
                
            } catch (error) {
                console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π —Å—Ç–∞—Ç—å–∏: ${error.message}`);
            }
        }
        
        // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ –±—Ä–∞—É–∑–µ—Ä–µ
        console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ HTML —Å—Ç—Ä–∞–Ω–∏—Ü...');
        
        try {
            const articlesPageResponse = await axios.get('http://localhost:3001/articles.html');
            console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ articles.html –¥–æ—Å—Ç—É–ø–Ω–∞');
        } catch (error) {
            console.log('‚ùå –°—Ç—Ä–∞–Ω–∏—Ü–∞ articles.html –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞:', error.message);
        }
        
        try {
            const articlePageResponse = await axios.get('http://localhost:3001/article.html');
            console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ article.html –¥–æ—Å—Ç—É–ø–Ω–∞');
        } catch (error) {
            console.log('‚ùå –°—Ç—Ä–∞–Ω–∏—Ü–∞ article.html –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞:', error.message);
        }
        
        // 4. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        console.log('\n4Ô∏è‚É£ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é:');
        console.log('üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ:');
        console.log('   - http://localhost:3001/articles.html');
        console.log('   - http://localhost:3001/test_images_debug.html');
        console.log('   - –ö–æ–Ω—Å–æ–ª—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ (F12) –¥–ª—è –æ—à–∏–±–æ–∫ JavaScript');
        console.log('   - –í–∫–ª–∞–¥–∫—É Network –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π');
        
        console.log('\nüîß –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –ø—Ä–æ–±–ª–µ–º:');
        console.log('   1. CORS –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–∞');
        console.log('   2. –ò—Å—Ç—ë–∫—à–∏–µ —Ç–æ–∫–µ–Ω—ã –¥–æ—Å—Ç—É–ø–∞ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º');
        console.log('   3. –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Å–º–µ—à–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ (HTTP/HTTPS)');
        console.log('   4. –û—à–∏–±–∫–∏ –≤ JavaScript –∫–æ–¥–µ —Å—Ç—Ä–∞–Ω–∏—Ü');
        
    } catch (error) {
        console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:', error.message);
    }
}

checkArticlesFix(); 