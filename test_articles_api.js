const axios = require('axios');

async function testArticlesAPI() {
    try {
        console.log('=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï API –°–¢–ê–¢–ï–ô ===');
        
        // –¢–µ—Å—Ç —Å–ø–∏—Å–∫–∞ —Å—Ç–∞—Ç–µ–π
        console.log('\n1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å—Ç–∞—Ç–µ–π...');
        try {
            const articlesResponse = await axios.get('http://localhost:3001/api/db/articles');
            console.log('‚úÖ API —Å–ø–∏—Å–∫–∞ —Å—Ç–∞—Ç–µ–π —Ä–∞–±–æ—Ç–∞–µ—Ç');
            console.log('üìä –°—Ç–∞—Ç–µ–π –Ω–∞–π–¥–µ–Ω–æ:', articlesResponse.data.articles?.length || 0);
            
            if (articlesResponse.data.articles && articlesResponse.data.articles.length > 0) {
                const firstArticle = articlesResponse.data.articles[0];
                console.log('üìÑ –ü–µ—Ä–≤–∞—è —Å—Ç–∞—Ç—å—è:', {
                    id: firstArticle.id,
                    title: firstArticle.title,
                    hasMainImage: !!firstArticle.main_image_url,
                    imageUrl: firstArticle.main_image_url ? firstArticle.main_image_url.substring(0, 50) + '...' : '–Ω–µ—Ç'
                });
                
                // –¢–µ—Å—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å—Ç–∞—Ç—å–∏
                console.log('\n2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å—Ç–∞—Ç—å–∏...');
                try {
                    const articleResponse = await axios.get(`http://localhost:3001/api/db/articles/${firstArticle.id}`);
                    console.log('‚úÖ API –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å—Ç–∞—Ç—å–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç');
                    console.log('üìÑ –°—Ç–∞—Ç—å—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞:', {
                        id: articleResponse.data.article.id,
                        title: articleResponse.data.article.title,
                        hasMainImage: !!articleResponse.data.article.main_image_url,
                        contentBlocks: articleResponse.data.article.contentBlocks?.length || 0,
                        architects: articleResponse.data.article.architects?.length || 0
                    });
                    
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –±–ª–æ–∫–∞—Ö –∫–æ–Ω—Ç–µ–Ω—Ç–∞
                    if (articleResponse.data.article.contentBlocks) {
                        const imageBlocks = articleResponse.data.article.contentBlocks.filter(block => block.block_type === 'image');
                        console.log('üñºÔ∏è –ë–ª–æ–∫–æ–≤ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏:', imageBlocks.length);
                        
                        imageBlocks.forEach((block, index) => {
                            console.log(`   –ë–ª–æ–∫ ${index + 1}:`, {
                                hasImageUrl: !!block.image_url,
                                caption: block.caption || '–±–µ–∑ –ø–æ–¥–ø–∏—Å–∏'
                            });
                        });
                    }
                    
                } catch (error) {
                    console.log('‚ùå API –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å—Ç–∞—Ç—å–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ:', error.message);
                }
            } else {
                console.log('‚ö†Ô∏è –°—Ç–∞—Ç—å–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –ë–î');
            }
            
        } catch (error) {
            console.log('‚ùå API —Å–ø–∏—Å–∫–∞ —Å—Ç–∞—Ç–µ–π –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ:', error.message);
        }
        
        console.log('\n=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û ===');
        
    } catch (error) {
        console.error('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
    }
}

testArticlesAPI(); 